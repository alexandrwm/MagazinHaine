﻿@model BeStreet.Domain.Entities.Items.Product
@using BeStreet.Domain.Entities.ViewModels
@{
    ViewData["Title"] = "Detalii produs";
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage;
    </div>
}

<div class="mt-2" style="margin-left:5vw;">
    <h1>Detalii produs</h1>
</div>
@{
    var PdId = Html.ValueFor(model => model.PdId);
    var maxStk = Html.ValueFor(model => model.PdStk);
    var pdimg = "/wwwroot/imgpd/P" + PdId + Model.ColorId + Model.SizeId + ".png";
    //double PdStk = 0;

    int PrefixId = Model.PdId;

    var items = (List<PdFilterVM>)ViewData["item"];

    var sizes = items!
    .Select(s => new { SizeId = s.SizeId, SizeName = s.SizeName })
    .Distinct()
    .ToList();

    var colors = items!
    .Select(s => new { ColorId = s.ColorId, ColorName = s.ColorName })
    .Distinct()
    .ToList();
}

<div id="size" class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <img src="@pdimg" alt="ProductImg" class="img-fluid">
        </div>
        <div class="col-md-6">
            <h1>@Html.DisplayFor(model => model.PdName)</h1>
            <p>Descriere: @Html.DisplayFor(model => model.PdDtls)</p>
            <p>Pret: @Html.DisplayFor(model => model.PdPrice) euro</p>
            @using (Html.BeginForm("AddDtl", "Cart", FormMethod.Post))
            {
                <div class="radio-tile-group">
                    @{
                        foreach (var size in sizes)
                        {
                            <div class="input-container">
                                @Html.RadioButton("radioSizes", size.SizeId, new { id = size.SizeName, @class = "radio-button", @onchange = $"updateStock('{PrefixId}')" })
                                <div class="radio-tile">
                                    <label for="@size.SizeName" class="radio-tile-label">@size.SizeName</label>
                                </div>

                                <script>
                                    var radios = document.querySelectorAll('.radio-button[name="radioSizes"]');
                                    radios[0].checked = true;
                                </script>
                            </div>
                        }
                    }
                </div>
                <div class="radio-tile-group">
                    @{foreach (var color in colors)
                        {
                            <div class="input-container">
                                @Html.RadioButton("radioColors", color.ColorId, new { id = color.ColorName, @class = "radio-button", @onchange = $"updateStock('{PrefixId}')" })
                                <div class="radio-tile">
                                    <label for="@color.ColorName" class="radio-tile-label">@color.ColorName</label>
                                </div>
                            </div>
                            <br>
                            <script>
                                var radios = document.querySelectorAll('.radio-button[name="radioColors"]');
                                radios[0].checked = true;
                            </script>
                        }
                    }                </div>

                <div id="stock-info">Cantitate in stock: <span id="stock-quantity">@maxStk</span></div>

                <input type="hidden" id="productId" name="pdid" value="@PdId">
                <div class="mb-3">
                    <label for="quantity" class="form-label">Cantitate</label>
                    <input type="number" class="form-control" id="quantity" min="1" value="1" name="qty" max="@maxStk">
                </div>
                <div class="form-group">
                    <input type="submit" id="SendTocart" value="Adaugă in coş" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
</div>
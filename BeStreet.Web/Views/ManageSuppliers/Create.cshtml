@model BeStreet.Domain.Entities.Items.Supplier

@{
    Layout = "~/Views/Shared/_AdminLayoutEdit.cshtml";
    <title>Adauga Furnizor</title>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage;
    </div>
}

@{
    var stext = ViewBag.stext;
}

<div class="d-sm-flex align-items-center justify-content-between mb-5">
    <h1 class="h3 mb-2 text-gray-800">Adauga Furnizor</h1>
</div>

<div class="row">
    <div class="col-xl-8 col-lg-9">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Informatie furnizor</h6>
            </div>
            <div class="card-body w-75 p-3">
                @using (Html.BeginForm("Create", "ManageSuppliers", FormMethod.Post, new { @class = "user" }))
                {
                    @Html.AntiForgeryToken();
                    @Html.ValidationMessage("ModelOnly", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.SupName, new
                        {
                            @class = "form-control form-control-user",
                            placeholder = "Nume Furnizor",
                            required = true,
                            type = "text"
                        })
                        @Html.ValidationMessageFor(m => m.SupName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.SupTel, new
                        {
                            @class = "form-control form-control-user",
                            placeholder = "Telefon",
                            required = true,
                            type = "text"
                        })
                        @Html.ValidationMessageFor(m => m.SupTel, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.SupEmail, new
                        {
                            @class = "form-control form-control-user",
                            placeholder = "Email",
                            required = true,
                            type = "email"
                        })
                        @Html.ValidationMessageFor(m => m.SupEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.SupAdd, new
                        {
                            @class = "form-control form-control-user",
                            placeholder = "Adresa",
                            required = true,
                            type = "text"
                        })
                        @Html.ValidationMessageFor(m => m.SupAdd, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.SupRemark, new
                        {
                            @class = "form-control form-control-user",
                            placeholder = "Remarca",
                            type = "text"
                        })
                        @Html.ValidationMessageFor(m => m.SupRemark, "", new { @class = "text-danger" })
                    </div>
                    <br>
                    <div class="mb-3 w-50">
                        <input class="btn btn-success btn-user btn-block" type="submit" value="Create Suppliers" />
                    </div>
                    <br>
                }
            </div>
        </div>
    </div>
</div>

<br>
<br>
<br>
<br>
